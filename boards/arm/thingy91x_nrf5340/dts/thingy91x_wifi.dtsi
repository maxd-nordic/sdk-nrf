#include <dt-bindings/regulator/npm1300.h>
#include <dt-bindings/regulator/npm6001.h>

/ {
	chosen {
		zephyr,wifi = &nordic_wlan0;
	};
	nordic_wlan0: nordic_wlan0 {
		compatible = "nordic,wlan0";
		status = "okay";
	};
	nrf70_tx_power_ceiling: nrf70_tx_power_ceiling_node {
		status = "okay";
		compatible = "nordic,nrf700x-tx-power-ceiling";
		max-pwr-2g-dsss = <0x54>;
		max-pwr-2g-mcs0 = <0x40>;
		max-pwr-2g-mcs7 = <0x40>;
		max-pwr-5g-low-mcs0 = <0x24>;
		max-pwr-5g-low-mcs7 = <0x24>;
		max-pwr-5g-mid-mcs0 = <0x2C>;
		max-pwr-5g-mid-mcs7 = <0x2C>;
		max-pwr-5g-high-mcs0 = <0x34>;
		max-pwr-5g-high-mcs7 = <0x34>;
	};
};

&pinctrl {
	i2c2_default: i2c2_default {
		group1 {
			psels = <NRF_PSEL(TWIM_SDA, 1, 3)>,
				<NRF_PSEL(TWIM_SCL, 1, 2)>;
		};
	};

	i2c2_sleep: i2c2_sleep {
		group1 {
			psels = <NRF_PSEL(TWIM_SDA, 1, 3)>,
				<NRF_PSEL(TWIM_SCL, 1, 2)>;
			low-power-enable;
		};
	};

	spi3_default: spi3_default {
		group1 {
			psels = <NRF_PSEL(SPIM_SCK, 0, 8)>,
				<NRF_PSEL(SPIM_MOSI, 0, 9)>,
				<NRF_PSEL(SPIM_MISO, 0, 10)>;
		};
	};

	spi3_sleep: spi3_sleep {
		group1 {
			psels = <NRF_PSEL(SPIM_SCK, 0, 8)>,
				<NRF_PSEL(SPIM_MOSI, 0, 9)>,
				<NRF_PSEL(SPIM_MISO, 0, 10)>;
			low-power-enable;
		};
	};
};

&i2c2 {
	compatible = "nordic,nrf-twim";
	status = "okay";
	clock-frequency = <I2C_BITRATE_STANDARD>;

	pinctrl-0 = <&i2c2_default>;
	pinctrl-1 = <&i2c2_sleep>;
	pinctrl-names = "default", "sleep";

	pmic_main: npm1300@6b {
		compatible = "nordic,npm1300";
		host-int-gpios = <&gpio0 2 GPIO_ACTIVE_HIGH>;
		pmic-int-pin = <3>;
		reg = <0x6b>;

		gpios_pmic: npm1300_gpios {
			compatible = "nordic,npm1300-gpio";
			gpio-controller;
			#gpio-cells = <2>;
			ngpios = <5>;
			npm13_button: GPIO0 {
				gpio-hog;
				gpios = <0 GPIO_ACTIVE_HIGH>;
			};
			/* GPIO1 switches power to the short range RF front end */
			ldsw_rf_fe_sr_en: GPIO1 {
				gpio-hog;
				output-high;
				gpios = <1 (GPIO_ACTIVE_LOW | GPIO_OPEN_DRAIN | GPIO_PULL_UP)>;
			};
			power_switch: GPIO2 {
				gpio-hog;
				gpios = <2 GPIO_ACTIVE_HIGH>;
			};
			npm60_ready: GPIO4 {
				gpio-hog;
				gpios = <4 GPIO_ACTIVE_HIGH>;
			};
		};

		regulators {
			compatible = "nordic,npm1300-regulator";
			/* Main 3.3 V regulator, enabled by GPIO2 (power switch) */
			reg_3v3: BUCK2 {
				regulator-min-microvolt = <3300000>;
				regulator-max-microvolt = <3300000>;
				enable-gpios = <&gpios_pmic 2 GPIO_ACTIVE_HIGH>;
			};
			/* LDO1 is used as a load switch pulling the nPM60 enable line to VSYS */
			ldsw_nPM60_en: LDO1 {
				regulator-initial-mode = <NPM1300_LDSW_MODE_LDSW>;
				regulator-allowed-modes = <NPM1300_LDSW_MODE_LDSW>;
				regulator-boot-on;
			};
			/* LDO2 is used as a load switch for sensor power supply */
			ldsw_sensors: LDO2 {
				regulator-initial-mode = <NPM1300_LDSW_MODE_LDSW>;
				regulator-allowed-modes = <NPM1300_LDSW_MODE_LDSW>;
				regulator-boot-on;
			};
		};

		npm1300_charger: charger {
			compatible = "nordic,npm1300-charger";
			vbus-limit-microamp = <500000>;
			/* Battery specs from LiPol LP803448 datasheet (Dwg. nr. FD_3245_70) */
			term-microvolt = <4200000>;
			current-microamp = <675000>; /* 0.5C charging current */
			dischg-limit-microamp = <1340000>; /* Maximum value for PMIC */
			thermistor-cold-millidegrees = <0>;
			thermistor-cool-millidegrees = <0>;
			thermistor-warm-millidegrees = <45000>;
			thermistor-hot-millidegrees = <45000>;
			thermistor-ohms = <10000>;
			thermistor-beta = <3435>;
			charging-enable;
		};
	};

	pmic_wifi: npm6001@70 {
		status = "okay";

		compatible = "nordic,npm6001";
		reg = <0x70>;

		regulators {
		compatible = "nordic,npm6001-regulator";
			/* Dedicated 3.3 V regulator for nRF70 */
			reg_wifi: BUCK3 {
				regulator-min-microvolt = <3300000>;
				regulator-max-microvolt = <3300000>;
				regulator-initial-mode = <NPM6001_MODE_PWM>;
				regulator-boot-on;
			};
		};
	};
};

&spi3 {
	compatible = "nordic,nrf-spim";
	status = "okay";
	cs-gpios = <&gpio0 11 GPIO_ACTIVE_LOW>;

	pinctrl-0 = <&spi3_default>;
	pinctrl-1 = <&spi3_sleep>;
	pinctrl-names = "default", "sleep";

	nrf700x: nrf7000@0 {
		compatible = "nordic,nrf700x-spi";
		status = "okay";
		reg = <0>;
		spi-max-frequency = <DT_FREQ_M(8)>;

		iovdd-ctrl-gpios = <&gpio0 4 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>;
		bucken-gpios = <&gpio0 7 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>;
		host-irq-gpios = <&gpio0 5 GPIO_ACTIVE_HIGH>;
	};

};
